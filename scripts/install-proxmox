#!/bin/bash
############
## COLORS ##
############
nocolor='\033[0m'
whiite='\033[0;97m'
whiitebold='\033[0;1;97m'
purple='\033[0;38;5;201m'
blue='\033[0;38;5;45m'
blueblink='\033[0;5;38;5;45m'
darkblue='\033[0;38;5;27m'
green='\033[0;32m'
greendim='\033[0;3;32m'
yellow='\033[0;38;5;178m'
orange='\e[38;5;166;3m'
orangeital='\e[0;3;38;5;166m'
gray='\033[0;38;5;249m'
graybold='\033[0;1;38;5;249m'
graydim='\033[0;2;38;5;250m'
red='\033[0;91m'
## CUSTOM
# c__fctName='\033[0;38;5;45m'
c__fctName=$whiitebold
c__fctAction=$graydim
c__fct2=$gray
c__msgVar=$graybold
c__value=$blue
c__error=$red
c__success=$green


## VARIABLES - TO BE CONFIGURED
ssh_port="2223"
network_host="10.10.200.0/24"
bastion_ip="10.10.200.219"
groups_str="group1:username1,username2/group2:username3,username4/group3/groupe4:username5,username6"
ssh_allowed_users="username2,username3"
ssh_allowed_groups="group1,group2"
ssh_denied_users="username5,username6"
ssh_denied_groups="group3,group4"
## - VARIABLES

## PARAMETERS
commandPath=$0
commandName=`basename "$commandPath"`
pwd=$(pwd)
actualpwd=$(pwd)
## - PARAMETERS


Main(){
	if [[ $proxmox == true ]]; then
		mv /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.disabled

		echo '# Proxmox community package repository' >> /etc/apt/sources.list
		echo 'deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription' >> /etc/apt/sources.list
	fi

	apt update
	apt upgrade
	apt dist-upgrade

	apt install htop gzip


	# ## start scripts
	# if [ $proxmox == true ]; then
	# 	if [ $vm_host == false ]; then
	# 		bash iptables-for-proxmox $ssh_port $network_cidr
	# 	else
	# 		printf "can't apply both --vm and --proxmox adding rules"
	# 	fi
	# elif [ $vm_host == true ]; then
	# 	bash iptables-for-vm $ssh_port $network_cidr $localhost_ip
	# fi

	bash iptables-for-proxmox $ssh_port $network_host

	bash iptables-for-vm $ssh_port $network_host $localhost_ip

	bash init-users --create -g $groups_str

	bash secure-ssh -p $ssh_port -n $network_host -u $ssh_allowed_users -g $ssh_allowed_groups -U $ssh_denied_users -G $ssh_denied_groups

}


## -----------------------------------------------------------------------
# CheckIfRoot
StartText
# Récupération des paramètres en utilisant getopts
while [[ $# -gt 0 ]]; do
  case $1 in
	--vm)
	  shift
	  vm_host=true
	  ;;
	--proxmox)
	  shift
	  proxmox=true
	  ;;
    -s | --ssh-port)
      shift
      ssh_port=$1
      ;;
    -n | --network-host)
      shift
      network_host=$1
      ;;
	-b | --bastion)
	  shift
	  bastion_ip=$1
	  ;;
    -u | --ssh-allowed-users)
      shift
    #   allowed_users=($(echo "$1" | tr ',' ' '))
      ssh_allowed_users=$1
      ;;
    -g | --ssh-allowed-groups)
      shift
    #   allowed_groups=($(echo "$1" | tr ',' ' '))
      ssh_allowed_groups=$1
      ;;
    -U | --ssh-denied-users)
      shift
    #   denied_users=($(echo "$1" | tr ',' ' '))
      ssh_denied_users=$1
      ;;
    -G | --ssh-denied-groups)
      shift
    #   denied_groups=($(echo "$1" | tr ',' ' '))
      ssh_denied_groups=$1
      ;;
    -h | --help)
	HowToUse
	exit 0
		;;
	*)
      echo "Option invalide: $1"
      exit 1
      ;;
  esac
  shift
done

Main()